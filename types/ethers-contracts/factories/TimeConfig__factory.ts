/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { TimeConfig, TimeConfigInterface } from "../TimeConfig.js";

  const _abi = [
  {
    "inputs": [],
    "name": "BTC_150K_BETTING_CLOSE",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "BTC_150K_PREDICTION_END",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  const _bytecode = "0x609c610033600b8282823980515f1a607314602757634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603c575f3560e01c8063c84bb35a146040578063e46d260014605c575b5f80fd5b604a636918db8481565b60405190815260200160405180910390f35b604a63695580848156fea2646970667358221220590b03cfb2f835c218fd6230b578c77359c60830ece1b8edb11b9935bad9014f64736f6c63430008180033";

  
      type TimeConfigConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: TimeConfigConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class TimeConfig__factory extends ContractFactory {
    
      constructor(...args: TimeConfigConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<TimeConfig & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): TimeConfig__factory {
      return super.connect(runner) as TimeConfig__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): TimeConfigInterface {
      return new Interface(_abi) as TimeConfigInterface;
    }
    
    override attach(address: string | Addressable): TimeConfig {
      return super.attach(address) as TimeConfig;
    }
  static connect(address: string, runner?: ContractRunner | null): TimeConfig {
      return new Contract(address, _abi, runner) as unknown as TimeConfig;
    }
  }

  
  